name: Test Release

on: [pull_request]

jobs:

  package:
    runs-on: ubuntu-latest
    container:
      image: danielflook/python-minifier-build:fedora34-2021-10-05
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set version statically
        run: |
          VERSION="$(python3 setup.py --version)"
          sed -i "s/setup_requires=.*/version='$VERSION',/; s/use_scm_version=.*//" setup.py

      - name: Package
        run: |
          pip3 install --upgrade setuptools wheel twine
          python3 setup.py sdist bdist_wheel --universal

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
          if-no-files-found: error

  test_docs:
    runs-on: ubuntu-latest
    needs: [package]
    container:
      image: danielflook/python-minifier-build:fedora34-2021-10-05
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Build documentation
        run: |
          pip3 install sphinx sphinxcontrib-programoutput sphinx_rtd_theme
          pip3 install dist/*.tar.gz
          sphinx-build docs/source /tmp/build

  test_package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8]
        package_type: [.tar.gz, .whl]
    needs: [package]
    container:
      image: danielflook/python-minifier-build:fedora30-2020-05-03
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install package
        run: |
          if [[ "${{ matrix.python }}" == "2.7" || "${{ matrix.python }}" == "3.7" ]]; then
             echo "pip is already installed"
          elif [[ "${{ matrix.python }}" == "3.8" ]]; then
             curl https://bootstrap.pypa.io/get-pip.py | python${{ matrix.python }}
          else
             curl https://bootstrap.pypa.io/pip/${{ matrix.python }}/get-pip.py | python${{ matrix.python }}       
          fi
          
          pip${{ matrix.python }} install dist/*${{ matrix.package_type }}
          pyminify --version

      - name: Test pyminify
        run: |
          set -x
          cat setup.py | pyminify -
          pyminify setup.py > /tmp/out.min.py
          pyminify setup.py --output /tmp/out.min.py2
          pyminify setup.py src test --in-place

  test_package_3_3:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package_type: [.tar.gz, .whl]
    needs: [package]
    container:
      image: danielflook/python-minifier-build:fedora28-2020-05-03
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install package
        run: |
          curl https://bootstrap.pypa.io/pip/3.3/get-pip.py | python3.3
          pip3.3 install dist/*${{ matrix.package_type }}
          pyminify --version

      - name: Test pyminify
        run: |
          set -x
          cat setup.py | pyminify -
          pyminify setup.py > /tmp/out.min.py
          pyminify setup.py --output /tmp/out.min.py2
          pyminify setup.py src test --in-place

  test_package_3_9:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package_type: [.tar.gz, .whl]
    needs: [package]
    container:
      image: danielflook/python-minifier-build:fedora32-2020-10-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install package
        run: |
          pip3.9 install dist/*${{ matrix.package_type }}
          pyminify --version

      - name: Test pyminify
        run: |
          set -x
          cat setup.py | pyminify -
          pyminify setup.py > /tmp/out.min.py
          pyminify setup.py --output /tmp/out.min.py2
          pyminify setup.py src test --in-place

  test_package_3_10:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package_type: [.tar.gz, .whl]
    needs: [package]
    container:
      image: danielflook/python-minifier-build:fedora34-2021-10-05
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install package
        run: |
          pip3.10 install dist/*${{ matrix.package_type }}
          pyminify --version

      - name: Test pyminify
        run: |
          set -x
          cat setup.py | pyminify -
          pyminify setup.py > /tmp/out.min.py
          pyminify setup.py --output /tmp/out.min.py2
          pyminify setup.py src test --in-place

      - name: Test typing
        run: |
          pip3.10 install mypy types-setuptools
          mypy typing_test/test_typing.py

          if mypy typing_test/test_badtyping.py; then
            echo "Bad types weren't detected"
            exit 1
          fi

          stubtest python_minifier
